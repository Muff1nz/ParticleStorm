//######################################################################################
//This class was generated by a python script called: ParticleStorm_StatsClass_Generator
//This is done for performance reasons.
//Could write this class manually using dictionaries to make the data more managable.
//But that would impact performance
//######################################################################################



#pragma once
#include <string>


class Stats {
public:

	//Total counts for last second
	int physicsUpdateTotalLastSecond = 0;
	int renderUpdateTotalLastSecond = 0;
	int explosionTotalLastSecond = 0;
	int physicsTimeRatioTotalLastSecond = 0;
	int puEventsTotalLastSecond = 0;
	int puPositionUpdatesTotalLastSecond = 0;
	int puQuadTreeUpdateTotalLastSecond = 0;
	int puCollisionUpdateTotalLastSecond = 0;


	void CompleteLastSecond() {
		physicsUpdateLastSecondTotalShadow = physicsUpdateTotalLastSecond;
		renderUpdateLastSecondTotalShadow = renderUpdateTotalLastSecond;
		explosionLastSecondTotalShadow = explosionTotalLastSecond;
		physicsTimeRatioLastSecondTotalShadow = physicsTimeRatioTotalLastSecond;
		puEventsLastSecondTotalShadow = puEventsTotalLastSecond;
		puPositionUpdatesLastSecondTotalShadow = puPositionUpdatesTotalLastSecond;
		puQuadTreeUpdateLastSecondTotalShadow = puQuadTreeUpdateTotalLastSecond;
		puCollisionUpdateLastSecondTotalShadow = puCollisionUpdateTotalLastSecond;

		physicsUpdateTotalLastSecond = 0;
		renderUpdateTotalLastSecond = 0;
		explosionTotalLastSecond = 0;
		physicsTimeRatioTotalLastSecond = 0;
		puEventsTotalLastSecond = 0;
		puPositionUpdatesTotalLastSecond = 0;
		puQuadTreeUpdateTotalLastSecond = 0;
		puCollisionUpdateTotalLastSecond = 0;

		physicsUpdateTotal += physicsUpdateLastSecondTotalShadow;
		renderUpdateTotal += renderUpdateLastSecondTotalShadow;
		explosionTotal += explosionLastSecondTotalShadow;
		physicsTimeRatioTotal += physicsTimeRatioLastSecondTotalShadow;
		puEventsTotal += puEventsLastSecondTotalShadow;
		puPositionUpdatesTotal += puPositionUpdatesLastSecondTotalShadow;
		puQuadTreeUpdateTotal += puQuadTreeUpdateLastSecondTotalShadow;
		puCollisionUpdateTotal += puCollisionUpdateLastSecondTotalShadow;

		physicsTimeRatioAverageLastSecond = physicsTimeRatioLastSecondTotalShadow;
		puEventsAverageLastSecond = puEventsLastSecondTotalShadow;
		puPositionUpdatesAverageLastSecond = puPositionUpdatesLastSecondTotalShadow;
		puQuadTreeUpdateAverageLastSecond = puQuadTreeUpdateLastSecondTotalShadow;
		puCollisionUpdateAverageLastSecond = puCollisionUpdateLastSecondTotalShadow;

		physicsTimeRatioAverageLastSecond /= float(physicsUpdateLastSecondTotalShadow);
		puEventsAverageLastSecond /= float(physicsUpdateLastSecondTotalShadow);
		puPositionUpdatesAverageLastSecond /= float(physicsUpdateLastSecondTotalShadow);
		puQuadTreeUpdateAverageLastSecond /= float(physicsUpdateLastSecondTotalShadow);
		puCollisionUpdateAverageLastSecond /= float(physicsUpdateLastSecondTotalShadow);
	}


	void CompleteSession() {
		physicsTimeRatioAverage = physicsTimeRatioTotal;
		puEventsAverage = puEventsTotal;
		puPositionUpdatesAverage = puPositionUpdatesTotal;
		puQuadTreeUpdateAverage = puQuadTreeUpdateTotal;
		puCollisionUpdateAverage = puCollisionUpdateTotal;

		physicsTimeRatioAverage /= float(physicsUpdateTotal);
		puEventsAverage /= float(physicsUpdateTotal);
		puPositionUpdatesAverage /= float(physicsUpdateTotal);
		puQuadTreeUpdateAverage /= float(physicsUpdateTotal);
		puCollisionUpdateAverage /= float(physicsUpdateTotal);
	}


	void ClearData() {
		physicsUpdateTotal = 0;
		renderUpdateTotal = 0;
		explosionTotal = 0;
		physicsTimeRatioTotal = 0;
		puEventsTotal = 0;
		puPositionUpdatesTotal = 0;
		puQuadTreeUpdateTotal = 0;
		puCollisionUpdateTotal = 0;
		physicsUpdateAverage = 0;
		renderUpdateAverage = 0;
		explosionAverage = 0;
		physicsTimeRatioAverage = 0;
		puEventsAverage = 0;
		puPositionUpdatesAverage = 0;
		puQuadTreeUpdateAverage = 0;
		puCollisionUpdateAverage = 0;
		physicsUpdateTotalLastSecond = 0;
		renderUpdateTotalLastSecond = 0;
		explosionTotalLastSecond = 0;
		physicsTimeRatioTotalLastSecond = 0;
		puEventsTotalLastSecond = 0;
		puPositionUpdatesTotalLastSecond = 0;
		puQuadTreeUpdateTotalLastSecond = 0;
		puCollisionUpdateTotalLastSecond = 0;
		physicsTimeRatioAverageLastSecond = 0;
		puEventsAverageLastSecond = 0;
		puPositionUpdatesAverageLastSecond = 0;
		puQuadTreeUpdateAverageLastSecond = 0;
		puCollisionUpdateAverageLastSecond = 0;
	}


	std::string LastSecondToStringConsole() const {
		std::string str;
		str += "===============================================================\n";
		str += "PHYSICS_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(physicsUpdateLastSecondTotalShadow) + "\n";
		str += "RENDER_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(renderUpdateLastSecondTotalShadow) + "\n";
		str += "EXPLOSION_LAST_SECOND_TOTAL: " + std::to_string(explosionLastSecondTotalShadow) + "\n";
		str += "===============================================================\n";
		str += "PHYSICS_TIME_RATIO_AVERAGE_LAST_SECOND: " + std::to_string(physicsTimeRatioAverageLastSecond) + "\n";
		str += "PU_EVENTS_AVERAGE_LAST_SECOND: " + std::to_string(puEventsAverageLastSecond) + "\n";
		str += "PU_POSITION_UPDATES_AVERAGE_LAST_SECOND: " + std::to_string(puPositionUpdatesAverageLastSecond) + "\n";
		str += "PU_QUAD_TREE_UPDATE_AVERAGE_LAST_SECOND: " + std::to_string(puQuadTreeUpdateAverageLastSecond) + "\n";
		str += "PU_COLLISION_UPDATE_AVERAGE_LAST_SECOND: " + std::to_string(puCollisionUpdateAverageLastSecond) + "\n";
		str += "===============================================================\n";
		return str;
	}


	std::string LastSecondToString() const {
		std::string str;
		str += "PHYSICS_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(physicsUpdateLastSecondTotalShadow) + "\n";
		str += "RENDER_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(renderUpdateLastSecondTotalShadow) + "\n";
		str += "EXPLOSION_LAST_SECOND_TOTAL: " + std::to_string(explosionLastSecondTotalShadow) + "\n";
		str += "PHYSICS_TIME_RATIO_LAST_SECOND_TOTAL: " + std::to_string(physicsTimeRatioLastSecondTotalShadow) + "\n";
		str += "PU_EVENTS_LAST_SECOND_TOTAL: " + std::to_string(puEventsLastSecondTotalShadow) + "\n";
		str += "PU_POSITION_UPDATES_LAST_SECOND_TOTAL: " + std::to_string(puPositionUpdatesLastSecondTotalShadow) + "\n";
		str += "PU_QUAD_TREE_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(puQuadTreeUpdateLastSecondTotalShadow) + "\n";
		str += "PU_COLLISION_UPDATE_LAST_SECOND_TOTAL: " + std::to_string(puCollisionUpdateLastSecondTotalShadow) + "\n";
		str += "PHYSICS_TIME_RATIO_AVERAGE_LAST_SECOND: " + std::to_string(physicsTimeRatioAverageLastSecond) + "\n";
		str += "PU_EVENTS_AVERAGE_LAST_SECOND: " + std::to_string(puEventsAverageLastSecond) + "\n";
		str += "PU_POSITION_UPDATES_AVERAGE_LAST_SECOND: " + std::to_string(puPositionUpdatesAverageLastSecond) + "\n";
		str += "PU_QUAD_TREE_UPDATE_AVERAGE_LAST_SECOND: " + std::to_string(puQuadTreeUpdateAverageLastSecond) + "\n";
		str += "PU_COLLISION_UPDATE_AVERAGE_LAST_SECOND: " + std::to_string(puCollisionUpdateAverageLastSecond) + "\n";
		return str;
	}


	std::string CompleteSessionToStringConsole() const {
		std::string str;
		str += "===============================================================\n";
		str += "PHYSICS_UPDATE_TOTAL: " + std::to_string(physicsUpdateTotal) + "\n";
		str += "RENDER_UPDATE_TOTAL: " + std::to_string(renderUpdateTotal) + "\n";
		str += "EXPLOSION_TOTAL: " + std::to_string(explosionTotal) + "\n";
		str += "PHYSICS_TIME_RATIO_TOTAL: " + std::to_string(physicsTimeRatioTotal) + "\n";
		str += "PU_EVENTS_TOTAL: " + std::to_string(puEventsTotal) + "\n";
		str += "PU_POSITION_UPDATES_TOTAL: " + std::to_string(puPositionUpdatesTotal) + "\n";
		str += "PU_QUAD_TREE_UPDATE_TOTAL: " + std::to_string(puQuadTreeUpdateTotal) + "\n";
		str += "PU_COLLISION_UPDATE_TOTAL: " + std::to_string(puCollisionUpdateTotal) + "\n";
		str += "===============================================================\n";
		str += "PHYSICS_TIME_RATIO_AVERAGE: " + std::to_string(physicsTimeRatioAverage) + "\n";
		str += "PU_EVENTS_AVERAGE: " + std::to_string(puEventsAverage) + "\n";
		str += "PU_POSITION_UPDATES_AVERAGE: " + std::to_string(puPositionUpdatesAverage) + "\n";
		str += "PU_QUAD_TREE_UPDATE_AVERAGE: " + std::to_string(puQuadTreeUpdateAverage) + "\n";
		str += "PU_COLLISION_UPDATE_AVERAGE: " + std::to_string(puCollisionUpdateAverage) + "\n";
		str += "===============================================================\n";
		return str;
	}


	std::string CompleteSessionToString() const {
		std::string str;
		str += "PHYSICS_UPDATE_TOTAL: " + std::to_string(physicsUpdateTotal) + "\n";
		str += "RENDER_UPDATE_TOTAL: " + std::to_string(renderUpdateTotal) + "\n";
		str += "EXPLOSION_TOTAL: " + std::to_string(explosionTotal) + "\n";
		str += "PHYSICS_TIME_RATIO_TOTAL: " + std::to_string(physicsTimeRatioTotal) + "\n";
		str += "PU_EVENTS_TOTAL: " + std::to_string(puEventsTotal) + "\n";
		str += "PU_POSITION_UPDATES_TOTAL: " + std::to_string(puPositionUpdatesTotal) + "\n";
		str += "PU_QUAD_TREE_UPDATE_TOTAL: " + std::to_string(puQuadTreeUpdateTotal) + "\n";
		str += "PU_COLLISION_UPDATE_TOTAL: " + std::to_string(puCollisionUpdateTotal) + "\n";
		str += "PHYSICS_TIME_RATIO_AVERAGE: " + std::to_string(physicsTimeRatioAverage) + "\n";
		str += "PU_EVENTS_AVERAGE: " + std::to_string(puEventsAverage) + "\n";
		str += "PU_POSITION_UPDATES_AVERAGE: " + std::to_string(puPositionUpdatesAverage) + "\n";
		str += "PU_QUAD_TREE_UPDATE_AVERAGE: " + std::to_string(puQuadTreeUpdateAverage) + "\n";
		str += "PU_COLLISION_UPDATE_AVERAGE: " + std::to_string(puCollisionUpdateAverage) + "\n";
		return str;
	}

private:

	//Total counts for entire session (from start to program closing)
	int physicsUpdateTotal = 0;
	int renderUpdateTotal = 0;
	int explosionTotal = 0;
	int physicsTimeRatioTotal = 0;
	int puEventsTotal = 0;
	int puPositionUpdatesTotal = 0;
	int puQuadTreeUpdateTotal = 0;
	int puCollisionUpdateTotal = 0;

	//Average per second for entire session (from start to program closing)
	float physicsUpdateAverage = 0;
	float renderUpdateAverage = 0;
	float explosionAverage = 0;
	float physicsTimeRatioAverage = 0;
	float puEventsAverage = 0;
	float puPositionUpdatesAverage = 0;
	float puQuadTreeUpdateAverage = 0;
	float puCollisionUpdateAverage = 0;

	//Average counts for last second
	float physicsTimeRatioAverageLastSecond = 0;
	float puEventsAverageLastSecond = 0;
	float puPositionUpdatesAverageLastSecond = 0;
	float puQuadTreeUpdateAverageLastSecond = 0;
	float puCollisionUpdateAverageLastSecond = 0;

	//Total counts for last second(Shadow)
	int physicsUpdateLastSecondTotalShadow = 0;
	int renderUpdateLastSecondTotalShadow = 0;
	int explosionLastSecondTotalShadow = 0;
	int physicsTimeRatioLastSecondTotalShadow = 0;
	int puEventsLastSecondTotalShadow = 0;
	int puPositionUpdatesLastSecondTotalShadow = 0;
	int puQuadTreeUpdateLastSecondTotalShadow = 0;
	int puCollisionUpdateLastSecondTotalShadow = 0;
};
